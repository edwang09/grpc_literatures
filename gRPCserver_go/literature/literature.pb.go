// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: literature/literature.proto

package literature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{0}
}

func (x *Text) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{1}
}

type AuthorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int32 `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AuthorId) Reset() {
	*x = AuthorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorId) ProtoMessage() {}

func (x *AuthorId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorId.ProtoReflect.Descriptor instead.
func (*AuthorId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorId) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId   int32  `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName string `protobuf:"bytes,2,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{3}
}

func (x *Author) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Author) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

type NewAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorName string `protobuf:"bytes,1,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
}

func (x *NewAuthor) Reset() {
	*x = NewAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAuthor) ProtoMessage() {}

func (x *NewAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAuthor.ProtoReflect.Descriptor instead.
func (*NewAuthor) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{4}
}

func (x *NewAuthor) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

type AuthorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authors []*Author `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
}

func (x *AuthorList) Reset() {
	*x = AuthorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorList) ProtoMessage() {}

func (x *AuthorList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorList.ProtoReflect.Descriptor instead.
func (*AuthorList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{5}
}

func (x *AuthorList) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

type BookId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId int32 `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *BookId) Reset() {
	*x = BookId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookId) ProtoMessage() {}

func (x *BookId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookId.ProtoReflect.Descriptor instead.
func (*BookId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{6}
}

func (x *BookId) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId   int32  `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	BookName string `protobuf:"bytes,2,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Format   string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Isbn     string `protobuf:"bytes,4,opt,name=isbn,proto3" json:"isbn,omitempty"`
	Page     int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{7}
}

func (x *Book) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *Book) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *Book) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Book) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *Book) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type NewBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName string `protobuf:"bytes,1,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Format   string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Isbn     string `protobuf:"bytes,3,opt,name=isbn,proto3" json:"isbn,omitempty"`
	Page     int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *NewBook) Reset() {
	*x = NewBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBook) ProtoMessage() {}

func (x *NewBook) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBook.ProtoReflect.Descriptor instead.
func (*NewBook) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{8}
}

func (x *NewBook) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *NewBook) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *NewBook) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *NewBook) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type BookList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*Book `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *BookList) Reset() {
	*x = BookList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookList) ProtoMessage() {}

func (x *BookList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookList.ProtoReflect.Descriptor instead.
func (*BookList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{9}
}

func (x *BookList) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type AwardId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardId int32 `protobuf:"varint,1,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
}

func (x *AwardId) Reset() {
	*x = AwardId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardId) ProtoMessage() {}

func (x *AwardId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardId.ProtoReflect.Descriptor instead.
func (*AwardId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{10}
}

func (x *AwardId) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

type Award struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardId   int32  `protobuf:"varint,1,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AwardName string `protobuf:"bytes,2,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
}

func (x *Award) Reset() {
	*x = Award{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Award) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Award) ProtoMessage() {}

func (x *Award) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Award.ProtoReflect.Descriptor instead.
func (*Award) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{11}
}

func (x *Award) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *Award) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

type NewAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardName string `protobuf:"bytes,1,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
}

func (x *NewAward) Reset() {
	*x = NewAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAward) ProtoMessage() {}

func (x *NewAward) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAward.ProtoReflect.Descriptor instead.
func (*NewAward) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{12}
}

func (x *NewAward) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

type AwardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Awards []*Award `protobuf:"bytes,1,rep,name=awards,proto3" json:"awards,omitempty"`
}

func (x *AwardList) Reset() {
	*x = AwardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardList) ProtoMessage() {}

func (x *AwardList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardList.ProtoReflect.Descriptor instead.
func (*AwardList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{13}
}

func (x *AwardList) GetAwards() []*Award {
	if x != nil {
		return x.Awards
	}
	return nil
}

type BookAuthorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookAuthorId int32 `protobuf:"varint,1,opt,name=book_author_id,json=bookAuthorId,proto3" json:"book_author_id,omitempty"`
}

func (x *BookAuthorId) Reset() {
	*x = BookAuthorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookAuthorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAuthorId) ProtoMessage() {}

func (x *BookAuthorId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookAuthorId.ProtoReflect.Descriptor instead.
func (*BookAuthorId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{14}
}

func (x *BookAuthorId) GetBookAuthorId() int32 {
	if x != nil {
		return x.BookAuthorId
	}
	return 0
}

type BookAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookAuthorId int32 `protobuf:"varint,1,opt,name=book_author_id,json=bookAuthorId,proto3" json:"book_author_id,omitempty"`
	BookId       int32 `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	AuthorId     int32 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *BookAuthor) Reset() {
	*x = BookAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAuthor) ProtoMessage() {}

func (x *BookAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookAuthor.ProtoReflect.Descriptor instead.
func (*BookAuthor) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{15}
}

func (x *BookAuthor) GetBookAuthorId() int32 {
	if x != nil {
		return x.BookAuthorId
	}
	return 0
}

func (x *BookAuthor) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookAuthor) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type BookAuthorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookAuthorId int32  `protobuf:"varint,1,opt,name=book_author_id,json=bookAuthorId,proto3" json:"book_author_id,omitempty"`
	BookId       int32  `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	BookName     string `protobuf:"bytes,3,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	AuthorId     int32  `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName   string `protobuf:"bytes,5,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
}

func (x *BookAuthorDetail) Reset() {
	*x = BookAuthorDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookAuthorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAuthorDetail) ProtoMessage() {}

func (x *BookAuthorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookAuthorDetail.ProtoReflect.Descriptor instead.
func (*BookAuthorDetail) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{16}
}

func (x *BookAuthorDetail) GetBookAuthorId() int32 {
	if x != nil {
		return x.BookAuthorId
	}
	return 0
}

func (x *BookAuthorDetail) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookAuthorDetail) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *BookAuthorDetail) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *BookAuthorDetail) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

type NewBookAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId   int32 `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	AuthorId int32 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *NewBookAuthor) Reset() {
	*x = NewBookAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBookAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBookAuthor) ProtoMessage() {}

func (x *NewBookAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBookAuthor.ProtoReflect.Descriptor instead.
func (*NewBookAuthor) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{17}
}

func (x *NewBookAuthor) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *NewBookAuthor) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type BookAuthorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookAuthors []*BookAuthorDetail `protobuf:"bytes,1,rep,name=book_authors,json=bookAuthors,proto3" json:"book_authors,omitempty"`
}

func (x *BookAuthorList) Reset() {
	*x = BookAuthorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookAuthorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAuthorList) ProtoMessage() {}

func (x *BookAuthorList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookAuthorList.ProtoReflect.Descriptor instead.
func (*BookAuthorList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{18}
}

func (x *BookAuthorList) GetBookAuthors() []*BookAuthorDetail {
	if x != nil {
		return x.BookAuthors
	}
	return nil
}

type AuthorGrantId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorGrantId int32 `protobuf:"varint,1,opt,name=author_grant_id,json=authorGrantId,proto3" json:"author_grant_id,omitempty"`
}

func (x *AuthorGrantId) Reset() {
	*x = AuthorGrantId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorGrantId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorGrantId) ProtoMessage() {}

func (x *AuthorGrantId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorGrantId.ProtoReflect.Descriptor instead.
func (*AuthorGrantId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{19}
}

func (x *AuthorGrantId) GetAuthorGrantId() int32 {
	if x != nil {
		return x.AuthorGrantId
	}
	return 0
}

type AuthorGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorGrantId int32 `protobuf:"varint,1,opt,name=author_grant_id,json=authorGrantId,proto3" json:"author_grant_id,omitempty"`
	AwardId       int32 `protobuf:"varint,2,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AuthorId      int32 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *AuthorGrant) Reset() {
	*x = AuthorGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorGrant) ProtoMessage() {}

func (x *AuthorGrant) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorGrant.ProtoReflect.Descriptor instead.
func (*AuthorGrant) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{20}
}

func (x *AuthorGrant) GetAuthorGrantId() int32 {
	if x != nil {
		return x.AuthorGrantId
	}
	return 0
}

func (x *AuthorGrant) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *AuthorGrant) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type AuthorGrantDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorGrantId int32  `protobuf:"varint,1,opt,name=author_grant_id,json=authorGrantId,proto3" json:"author_grant_id,omitempty"`
	AwardId       int32  `protobuf:"varint,2,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AwardName     string `protobuf:"bytes,3,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
	AuthorId      int32  `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName    string `protobuf:"bytes,5,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
}

func (x *AuthorGrantDetail) Reset() {
	*x = AuthorGrantDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorGrantDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorGrantDetail) ProtoMessage() {}

func (x *AuthorGrantDetail) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorGrantDetail.ProtoReflect.Descriptor instead.
func (*AuthorGrantDetail) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{21}
}

func (x *AuthorGrantDetail) GetAuthorGrantId() int32 {
	if x != nil {
		return x.AuthorGrantId
	}
	return 0
}

func (x *AuthorGrantDetail) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *AuthorGrantDetail) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

func (x *AuthorGrantDetail) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *AuthorGrantDetail) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

type NewAuthorGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardId  int32 `protobuf:"varint,1,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AuthorId int32 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *NewAuthorGrant) Reset() {
	*x = NewAuthorGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAuthorGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAuthorGrant) ProtoMessage() {}

func (x *NewAuthorGrant) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAuthorGrant.ProtoReflect.Descriptor instead.
func (*NewAuthorGrant) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{22}
}

func (x *NewAuthorGrant) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *NewAuthorGrant) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type AuthorGrantList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorGrants []*AuthorGrantDetail `protobuf:"bytes,1,rep,name=author_grants,json=authorGrants,proto3" json:"author_grants,omitempty"`
}

func (x *AuthorGrantList) Reset() {
	*x = AuthorGrantList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorGrantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorGrantList) ProtoMessage() {}

func (x *AuthorGrantList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorGrantList.ProtoReflect.Descriptor instead.
func (*AuthorGrantList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{23}
}

func (x *AuthorGrantList) GetAuthorGrants() []*AuthorGrantDetail {
	if x != nil {
		return x.AuthorGrants
	}
	return nil
}

type BookGrantId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookGrantId int32 `protobuf:"varint,1,opt,name=book_grant_id,json=bookGrantId,proto3" json:"book_grant_id,omitempty"`
}

func (x *BookGrantId) Reset() {
	*x = BookGrantId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookGrantId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookGrantId) ProtoMessage() {}

func (x *BookGrantId) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookGrantId.ProtoReflect.Descriptor instead.
func (*BookGrantId) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{24}
}

func (x *BookGrantId) GetBookGrantId() int32 {
	if x != nil {
		return x.BookGrantId
	}
	return 0
}

type BookGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookGrantId int32 `protobuf:"varint,1,opt,name=book_grant_id,json=bookGrantId,proto3" json:"book_grant_id,omitempty"`
	AwardId     int32 `protobuf:"varint,2,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	BookId      int32 `protobuf:"varint,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *BookGrant) Reset() {
	*x = BookGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookGrant) ProtoMessage() {}

func (x *BookGrant) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookGrant.ProtoReflect.Descriptor instead.
func (*BookGrant) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{25}
}

func (x *BookGrant) GetBookGrantId() int32 {
	if x != nil {
		return x.BookGrantId
	}
	return 0
}

func (x *BookGrant) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *BookGrant) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type BookGrantDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookGrantId int32  `protobuf:"varint,1,opt,name=book_grant_id,json=bookGrantId,proto3" json:"book_grant_id,omitempty"`
	AwardId     int32  `protobuf:"varint,2,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AwardName   string `protobuf:"bytes,3,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
	BookId      int32  `protobuf:"varint,4,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	BookName    string `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
}

func (x *BookGrantDetail) Reset() {
	*x = BookGrantDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookGrantDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookGrantDetail) ProtoMessage() {}

func (x *BookGrantDetail) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookGrantDetail.ProtoReflect.Descriptor instead.
func (*BookGrantDetail) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{26}
}

func (x *BookGrantDetail) GetBookGrantId() int32 {
	if x != nil {
		return x.BookGrantId
	}
	return 0
}

func (x *BookGrantDetail) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *BookGrantDetail) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

func (x *BookGrantDetail) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookGrantDetail) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

type NewBookGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardId int32 `protobuf:"varint,1,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	BookId  int32 `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
}

func (x *NewBookGrant) Reset() {
	*x = NewBookGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBookGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBookGrant) ProtoMessage() {}

func (x *NewBookGrant) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBookGrant.ProtoReflect.Descriptor instead.
func (*NewBookGrant) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{27}
}

func (x *NewBookGrant) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *NewBookGrant) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

type BookGrantList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookGrants []*BookGrantDetail `protobuf:"bytes,1,rep,name=book_grants,json=bookGrants,proto3" json:"book_grants,omitempty"`
}

func (x *BookGrantList) Reset() {
	*x = BookGrantList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookGrantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookGrantList) ProtoMessage() {}

func (x *BookGrantList) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookGrantList.ProtoReflect.Descriptor instead.
func (*BookGrantList) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{28}
}

func (x *BookGrantList) GetBookGrants() []*BookGrantDetail {
	if x != nil {
		return x.BookGrants
	}
	return nil
}

type MostAwardedAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId    int32  `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName  string `protobuf:"bytes,2,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	AwardedTime int32  `protobuf:"varint,3,opt,name=awarded_time,json=awardedTime,proto3" json:"awarded_time,omitempty"`
}

func (x *MostAwardedAuthor) Reset() {
	*x = MostAwardedAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostAwardedAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostAwardedAuthor) ProtoMessage() {}

func (x *MostAwardedAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostAwardedAuthor.ProtoReflect.Descriptor instead.
func (*MostAwardedAuthor) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{29}
}

func (x *MostAwardedAuthor) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *MostAwardedAuthor) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *MostAwardedAuthor) GetAwardedTime() int32 {
	if x != nil {
		return x.AwardedTime
	}
	return 0
}

type MostAwardedBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId      int32  `protobuf:"varint,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	BookName    string `protobuf:"bytes,2,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Format      string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Isbn        string `protobuf:"bytes,4,opt,name=isbn,proto3" json:"isbn,omitempty"`
	Page        int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	AwardedTime int32  `protobuf:"varint,6,opt,name=awarded_time,json=awardedTime,proto3" json:"awarded_time,omitempty"`
}

func (x *MostAwardedBook) Reset() {
	*x = MostAwardedBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostAwardedBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostAwardedBook) ProtoMessage() {}

func (x *MostAwardedBook) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostAwardedBook.ProtoReflect.Descriptor instead.
func (*MostAwardedBook) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{30}
}

func (x *MostAwardedBook) GetBookId() int32 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *MostAwardedBook) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *MostAwardedBook) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *MostAwardedBook) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *MostAwardedBook) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MostAwardedBook) GetAwardedTime() int32 {
	if x != nil {
		return x.AwardedTime
	}
	return 0
}

type MostGrantedAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardId     int32  `protobuf:"varint,1,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	AwardName   string `protobuf:"bytes,2,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
	AwardedTime int32  `protobuf:"varint,3,opt,name=awarded_time,json=awardedTime,proto3" json:"awarded_time,omitempty"`
}

func (x *MostGrantedAward) Reset() {
	*x = MostGrantedAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostGrantedAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostGrantedAward) ProtoMessage() {}

func (x *MostGrantedAward) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostGrantedAward.ProtoReflect.Descriptor instead.
func (*MostGrantedAward) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{31}
}

func (x *MostGrantedAward) GetAwardId() int32 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *MostGrantedAward) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

func (x *MostGrantedAward) GetAwardedTime() int32 {
	if x != nil {
		return x.AwardedTime
	}
	return 0
}

type MostAwardedAuthors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authors []*MostAwardedAuthor `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
}

func (x *MostAwardedAuthors) Reset() {
	*x = MostAwardedAuthors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostAwardedAuthors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostAwardedAuthors) ProtoMessage() {}

func (x *MostAwardedAuthors) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostAwardedAuthors.ProtoReflect.Descriptor instead.
func (*MostAwardedAuthors) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{32}
}

func (x *MostAwardedAuthors) GetAuthors() []*MostAwardedAuthor {
	if x != nil {
		return x.Authors
	}
	return nil
}

type MostAwardedBooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*MostAwardedBook `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *MostAwardedBooks) Reset() {
	*x = MostAwardedBooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostAwardedBooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostAwardedBooks) ProtoMessage() {}

func (x *MostAwardedBooks) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostAwardedBooks.ProtoReflect.Descriptor instead.
func (*MostAwardedBooks) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{33}
}

func (x *MostAwardedBooks) GetBooks() []*MostAwardedBook {
	if x != nil {
		return x.Books
	}
	return nil
}

type MostGrantedAwards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Awards []*MostGrantedAward `protobuf:"bytes,1,rep,name=awards,proto3" json:"awards,omitempty"`
}

func (x *MostGrantedAwards) Reset() {
	*x = MostGrantedAwards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostGrantedAwards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostGrantedAwards) ProtoMessage() {}

func (x *MostGrantedAwards) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostGrantedAwards.ProtoReflect.Descriptor instead.
func (*MostGrantedAwards) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{34}
}

func (x *MostGrantedAwards) GetAwards() []*MostGrantedAward {
	if x != nil {
		return x.Awards
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_literature_literature_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_literature_literature_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_literature_literature_proto_rawDescGZIP(), []int{35}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

var File_literature_literature_proto protoreflect.FileDescriptor

var file_literature_literature_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x6c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x27,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x2c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a,
	0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x06, 0x42, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x04,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x66, 0x0a, 0x07, 0x4e, 0x65,
	0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73,
	0x62, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x24, 0x0a, 0x07, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x05,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x09, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x45, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b,
	0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x4e, 0x65, 0x77,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x42, 0x6f,
	0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62,
	0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x0c, 0x4e, 0x65,
	0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x74, 0x0a,
	0x11, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x6f, 0x0a, 0x10, 0x4d, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x4d, 0x0a, 0x12, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73,
	0x22, 0x45, 0x0a, 0x10, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x42,
	0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x4d, 0x6f, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x06,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x32, 0xfa, 0x10, 0x0a, 0x0a, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x67, 0x52, 0x50, 0x43, 0x12,
	0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x14, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x15, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x12,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x13, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x45, 0x64,
	0x69, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x2e, 0x6c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x1a, 0x11,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x13, 0x2e, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x1a, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x14, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e,
	0x65, 0x77, 0x41, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09,
	0x45, 0x64, 0x69, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x11, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x13, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12,
	0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0x1c, 0x2e, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6f, 0x6f,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x11,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x1d, 0x2e,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x12, 0x1a, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x6c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x11,
	0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f,
	0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x6c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x1a, 0x1b, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12,
	0x18, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x65, 0x77,
	0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a,
	0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x0f, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x4d, 0x6f, 0x73,
	0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x11, 0x2e,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1d, 0x2e, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x6f,
	0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x00, 0x42, 0x62, 0x0a, 0x1b, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x67, 0x75, 0x69, 0x64, 0x65,
	0x42, 0x0f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x62, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x64, 0x77, 0x61, 0x6e, 0x67, 0x30, 0x39, 0x2f, 0x6a, 0x72, 0x2d, 0x64, 0x65, 0x76, 0x2d,
	0x74, 0x65, 0x73, 0x74, 0x2f, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0xa2,
	0x02, 0x03, 0x52, 0x54, 0x47, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_literature_literature_proto_rawDescOnce sync.Once
	file_literature_literature_proto_rawDescData = file_literature_literature_proto_rawDesc
)

func file_literature_literature_proto_rawDescGZIP() []byte {
	file_literature_literature_proto_rawDescOnce.Do(func() {
		file_literature_literature_proto_rawDescData = protoimpl.X.CompressGZIP(file_literature_literature_proto_rawDescData)
	})
	return file_literature_literature_proto_rawDescData
}

var file_literature_literature_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_literature_literature_proto_goTypes = []interface{}{
	(*Text)(nil),               // 0: literature.Text
	(*Empty)(nil),              // 1: literature.Empty
	(*AuthorId)(nil),           // 2: literature.AuthorId
	(*Author)(nil),             // 3: literature.Author
	(*NewAuthor)(nil),          // 4: literature.NewAuthor
	(*AuthorList)(nil),         // 5: literature.AuthorList
	(*BookId)(nil),             // 6: literature.BookId
	(*Book)(nil),               // 7: literature.Book
	(*NewBook)(nil),            // 8: literature.NewBook
	(*BookList)(nil),           // 9: literature.BookList
	(*AwardId)(nil),            // 10: literature.AwardId
	(*Award)(nil),              // 11: literature.Award
	(*NewAward)(nil),           // 12: literature.NewAward
	(*AwardList)(nil),          // 13: literature.AwardList
	(*BookAuthorId)(nil),       // 14: literature.BookAuthorId
	(*BookAuthor)(nil),         // 15: literature.BookAuthor
	(*BookAuthorDetail)(nil),   // 16: literature.BookAuthorDetail
	(*NewBookAuthor)(nil),      // 17: literature.NewBookAuthor
	(*BookAuthorList)(nil),     // 18: literature.BookAuthorList
	(*AuthorGrantId)(nil),      // 19: literature.AuthorGrantId
	(*AuthorGrant)(nil),        // 20: literature.AuthorGrant
	(*AuthorGrantDetail)(nil),  // 21: literature.AuthorGrantDetail
	(*NewAuthorGrant)(nil),     // 22: literature.NewAuthorGrant
	(*AuthorGrantList)(nil),    // 23: literature.AuthorGrantList
	(*BookGrantId)(nil),        // 24: literature.BookGrantId
	(*BookGrant)(nil),          // 25: literature.BookGrant
	(*BookGrantDetail)(nil),    // 26: literature.BookGrantDetail
	(*NewBookGrant)(nil),       // 27: literature.NewBookGrant
	(*BookGrantList)(nil),      // 28: literature.BookGrantList
	(*MostAwardedAuthor)(nil),  // 29: literature.MostAwardedAuthor
	(*MostAwardedBook)(nil),    // 30: literature.MostAwardedBook
	(*MostGrantedAward)(nil),   // 31: literature.MostGrantedAward
	(*MostAwardedAuthors)(nil), // 32: literature.MostAwardedAuthors
	(*MostAwardedBooks)(nil),   // 33: literature.MostAwardedBooks
	(*MostGrantedAwards)(nil),  // 34: literature.MostGrantedAwards
	(*Pagination)(nil),         // 35: literature.Pagination
}
var file_literature_literature_proto_depIdxs = []int32{
	3,  // 0: literature.AuthorList.authors:type_name -> literature.Author
	7,  // 1: literature.BookList.books:type_name -> literature.Book
	11, // 2: literature.AwardList.awards:type_name -> literature.Award
	16, // 3: literature.BookAuthorList.book_authors:type_name -> literature.BookAuthorDetail
	21, // 4: literature.AuthorGrantList.author_grants:type_name -> literature.AuthorGrantDetail
	26, // 5: literature.BookGrantList.book_grants:type_name -> literature.BookGrantDetail
	29, // 6: literature.MostAwardedAuthors.authors:type_name -> literature.MostAwardedAuthor
	30, // 7: literature.MostAwardedBooks.books:type_name -> literature.MostAwardedBook
	31, // 8: literature.MostGrantedAwards.awards:type_name -> literature.MostGrantedAward
	0,  // 9: literature.Literature.TestgRPC:input_type -> literature.Text
	1,  // 10: literature.Literature.GetAllAuthors:input_type -> literature.Empty
	2,  // 11: literature.Literature.GetAuthor:input_type -> literature.AuthorId
	4,  // 12: literature.Literature.AddAuthor:input_type -> literature.NewAuthor
	3,  // 13: literature.Literature.EditAuthor:input_type -> literature.Author
	2,  // 14: literature.Literature.DeleteAuthor:input_type -> literature.AuthorId
	1,  // 15: literature.Literature.GetAllBooks:input_type -> literature.Empty
	6,  // 16: literature.Literature.GetBook:input_type -> literature.BookId
	8,  // 17: literature.Literature.AddBook:input_type -> literature.NewBook
	7,  // 18: literature.Literature.EditBook:input_type -> literature.Book
	6,  // 19: literature.Literature.DeleteBook:input_type -> literature.BookId
	1,  // 20: literature.Literature.GetAllAwards:input_type -> literature.Empty
	10, // 21: literature.Literature.GetAward:input_type -> literature.AwardId
	12, // 22: literature.Literature.AddAward:input_type -> literature.NewAward
	11, // 23: literature.Literature.EditAward:input_type -> literature.Award
	10, // 24: literature.Literature.DeleteAward:input_type -> literature.AwardId
	1,  // 25: literature.Literature.GetAllBookAuthors:input_type -> literature.Empty
	14, // 26: literature.Literature.GetBookAuthor:input_type -> literature.BookAuthorId
	17, // 27: literature.Literature.AddBookAuthor:input_type -> literature.NewBookAuthor
	15, // 28: literature.Literature.EditBookAuthor:input_type -> literature.BookAuthor
	14, // 29: literature.Literature.DeleteBookAuthor:input_type -> literature.BookAuthorId
	1,  // 30: literature.Literature.GetAllAuthorGrants:input_type -> literature.Empty
	19, // 31: literature.Literature.GetAuthorGrant:input_type -> literature.AuthorGrantId
	22, // 32: literature.Literature.AddAuthorGrant:input_type -> literature.NewAuthorGrant
	20, // 33: literature.Literature.EditAuthorGrant:input_type -> literature.AuthorGrant
	19, // 34: literature.Literature.DeleteAuthorGrant:input_type -> literature.AuthorGrantId
	1,  // 35: literature.Literature.GetAllBookGrants:input_type -> literature.Empty
	24, // 36: literature.Literature.GetBookGrant:input_type -> literature.BookGrantId
	27, // 37: literature.Literature.AddBookGrant:input_type -> literature.NewBookGrant
	25, // 38: literature.Literature.EditBookGrant:input_type -> literature.BookGrant
	24, // 39: literature.Literature.DeleteBookGrant:input_type -> literature.BookGrantId
	1,  // 40: literature.Literature.MostAwardedAuthor:input_type -> literature.Empty
	35, // 41: literature.Literature.MostAwardedBook:input_type -> literature.Pagination
	1,  // 42: literature.Literature.MostGrantedAward:input_type -> literature.Empty
	0,  // 43: literature.Literature.TestgRPC:output_type -> literature.Text
	5,  // 44: literature.Literature.GetAllAuthors:output_type -> literature.AuthorList
	3,  // 45: literature.Literature.GetAuthor:output_type -> literature.Author
	3,  // 46: literature.Literature.AddAuthor:output_type -> literature.Author
	3,  // 47: literature.Literature.EditAuthor:output_type -> literature.Author
	1,  // 48: literature.Literature.DeleteAuthor:output_type -> literature.Empty
	9,  // 49: literature.Literature.GetAllBooks:output_type -> literature.BookList
	7,  // 50: literature.Literature.GetBook:output_type -> literature.Book
	7,  // 51: literature.Literature.AddBook:output_type -> literature.Book
	7,  // 52: literature.Literature.EditBook:output_type -> literature.Book
	1,  // 53: literature.Literature.DeleteBook:output_type -> literature.Empty
	13, // 54: literature.Literature.GetAllAwards:output_type -> literature.AwardList
	11, // 55: literature.Literature.GetAward:output_type -> literature.Award
	11, // 56: literature.Literature.AddAward:output_type -> literature.Award
	11, // 57: literature.Literature.EditAward:output_type -> literature.Award
	1,  // 58: literature.Literature.DeleteAward:output_type -> literature.Empty
	18, // 59: literature.Literature.GetAllBookAuthors:output_type -> literature.BookAuthorList
	16, // 60: literature.Literature.GetBookAuthor:output_type -> literature.BookAuthorDetail
	15, // 61: literature.Literature.AddBookAuthor:output_type -> literature.BookAuthor
	15, // 62: literature.Literature.EditBookAuthor:output_type -> literature.BookAuthor
	1,  // 63: literature.Literature.DeleteBookAuthor:output_type -> literature.Empty
	23, // 64: literature.Literature.GetAllAuthorGrants:output_type -> literature.AuthorGrantList
	21, // 65: literature.Literature.GetAuthorGrant:output_type -> literature.AuthorGrantDetail
	20, // 66: literature.Literature.AddAuthorGrant:output_type -> literature.AuthorGrant
	20, // 67: literature.Literature.EditAuthorGrant:output_type -> literature.AuthorGrant
	1,  // 68: literature.Literature.DeleteAuthorGrant:output_type -> literature.Empty
	28, // 69: literature.Literature.GetAllBookGrants:output_type -> literature.BookGrantList
	26, // 70: literature.Literature.GetBookGrant:output_type -> literature.BookGrantDetail
	25, // 71: literature.Literature.AddBookGrant:output_type -> literature.BookGrant
	25, // 72: literature.Literature.EditBookGrant:output_type -> literature.BookGrant
	1,  // 73: literature.Literature.DeleteBookGrant:output_type -> literature.Empty
	32, // 74: literature.Literature.MostAwardedAuthor:output_type -> literature.MostAwardedAuthors
	33, // 75: literature.Literature.MostAwardedBook:output_type -> literature.MostAwardedBooks
	34, // 76: literature.Literature.MostGrantedAward:output_type -> literature.MostGrantedAwards
	43, // [43:77] is the sub-list for method output_type
	9,  // [9:43] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_literature_literature_proto_init() }
func file_literature_literature_proto_init() {
	if File_literature_literature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_literature_literature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Award); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookAuthorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookAuthorDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBookAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookAuthorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorGrantId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorGrantDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAuthorGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorGrantList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookGrantId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookGrantDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBookGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookGrantList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostAwardedAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostAwardedBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostGrantedAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostAwardedAuthors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostAwardedBooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostGrantedAwards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_literature_literature_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_literature_literature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_literature_literature_proto_goTypes,
		DependencyIndexes: file_literature_literature_proto_depIdxs,
		MessageInfos:      file_literature_literature_proto_msgTypes,
	}.Build()
	File_literature_literature_proto = out.File
	file_literature_literature_proto_rawDesc = nil
	file_literature_literature_proto_goTypes = nil
	file_literature_literature_proto_depIdxs = nil
}
